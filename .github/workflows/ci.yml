name: CI

on:
  push:
    branches:
      - main
      - next
      - dev
  pull_request:
    branches:
      - main
      - next
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout code

      - uses: denoland/setup-deno@v1
        with:
          deno-version: vx.x.x

      - name: Run Deno linter
        run: deno lint

      - name: Update version in deno.json
        run: |
          # Debug: Print branch name and current version
          echo "Branch name: ${{ github.ref_name }}"
          
          # Get the branch name
          BRANCH_NAME=${{ github.ref_name }}
          
          # Extract current version from deno.json
          CURRENT_VERSION=$(jq -r '.version' deno.json)
          echo "Current version: $CURRENT_VERSION"

          if [ "$BRANCH_NAME" == "main" ]; then
            # Remove everything after and including the "-" for the main branch
            NEW_VERSION=$(echo "$CURRENT_VERSION" | sed -E 's/-.*//')
          else
            # Replace "branch" with the current branch name for non-main branches
            NEW_VERSION=$(echo "$CURRENT_VERSION" | sed -E "s/branch/${BRANCH_NAME//\//\\/}/")
          fi

          echo "New version: $NEW_VERSION"

          # Update the version in deno.json
          jq --arg version "$NEW_VERSION" '.version = $version' deno.json > tmp.json && mv tmp.json deno.json

          # Debug: Print the deno.json before updating
          echo "Before update:"
          cat deno.json

          # Print the updated deno.json for verification
          echo "After update:"
          cat deno.json

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          add: 'deno.json'
          message: 'Update deno.json version based on branch name'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
